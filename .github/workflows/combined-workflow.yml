name: Controlled Deploy

env:
  # 默认部署目标（可被覆盖）
  DEPLOY_TARGET: 'pages' # 可选值: pages / server / both

on:
  push:
    branches:
      - master
    paths-ignore:
      - LICENSE
      - README.md

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: Node环境
        uses: actions/setup-node@v4
        with:
          node-version: 22.9.0

      - name: 安装pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.1
          run_install: false

      - name: 获取pnpm仓库路径
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 缓存pnpm依赖
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: pnpm install

      - name: 打包构建
        run: pnpm run docs:build

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: src/.vuepress/dist

#  scrape:
#    needs: deploy-pages
#    runs-on: ubuntu-latest
#    name: 重新抓取 MeiliSearch 文档
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: 运行抓取器
#        env:
#          HOST_URL: 'http://101.43.49.28:7700/'
#          API_KEY: ${{ secrets.MEILISEARCH_MASTER_KEY }}
#          # 替换为配置文件的路径
#          CONFIG_FILE_PATH: ${{ github.workspace }}/<path/to/your/scraper/config.json>
#        run: |
#          docker run -t --rm \
#            -e MEILISEARCH_HOST_URL=$HOST_URL \
#            -e MEILISEARCH_API_KEY=$API_KEY \
#            -v $CONFIG_FILE_PATH:/docs-scraper/config.json \
#            getmeili/docs-scraper:latest pipenv run ./docs_scraper config.json

  deploy-pages:
    needs: build
    if: true
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist

      - name: 部署到Page分支
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
          force_orphan: true  # 保持page分支历史干净
          cname: blog.sylphy.me

  deploy-server:
    needs: build
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist

      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.USER_HOST }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.KEY }}
          source: ./
          target: ${{ secrets.USER_TARGET }}